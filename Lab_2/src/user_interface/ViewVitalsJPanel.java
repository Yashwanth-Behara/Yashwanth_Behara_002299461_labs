/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package user_interface;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.VitalSigns;
import model.VitalSignsHistory;

/**
 *
 * @author yash
 */
public class ViewVitalsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewVitalsJPanel
     */
    VitalSignsHistory vitalSignsHistory;
    public ViewVitalsJPanel(VitalSignsHistory vh) {
        initComponents();
        this.vitalSignsHistory = vh;
        
        // Method to populate the data in the table
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewVitalsLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignTable = new javax.swing.JTable();
        deleteBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();
        bldPressureLbl = new javax.swing.JLabel();
        pulseLbl = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        tempTxtField = new javax.swing.JTextField();
        bldPressureTxtField = new javax.swing.JTextField();
        pulseTxtField = new javax.swing.JTextField();
        dateTxtField = new javax.swing.JTextField();
        tempLbl = new javax.swing.JLabel();

        viewVitalsLbl.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        viewVitalsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        viewVitalsLbl.setText("View Vital Signs ");

        vitalSignTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Temperature", "Pulse", "Blood Pressure"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalSignTable);

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        bldPressureLbl.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        bldPressureLbl.setText("Blood Pressure:");

        pulseLbl.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        pulseLbl.setText("Pulse:");

        dateLbl.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        dateLbl.setText("Date:");

        tempTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempTxtFieldActionPerformed(evt);
            }
        });

        tempLbl.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        tempLbl.setText("Temperature:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewVitalsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(viewBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteBtn))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateLbl)
                            .addComponent(pulseLbl)
                            .addComponent(bldPressureLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tempLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bldPressureTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pulseTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tempTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bldPressureTxtField, dateTxtField, pulseTxtField, tempTxtField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(viewVitalsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn)
                    .addComponent(viewBtn))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bldPressureLbl)
                    .addComponent(bldPressureTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulseLbl)
                    .addComponent(pulseTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLbl)
                    .addComponent(dateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = vitalSignTable.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) vitalSignTable.getModel();
        
        // Get the Array List and remove the data object from selected index 
        ArrayList<VitalSigns> vs = vitalSignsHistory.getHistory();
        VitalSigns v = vs.get(selectedRowIndex);
        
        tempTxtField.setText(String.valueOf(v.getTemperature()));
        dateTxtField.setText(String.valueOf(v.getDate()));
        pulseTxtField.setText(String.valueOf(v.getPulse()));
        bldPressureTxtField.setText(String.valueOf(v.getBloodPressure()));
        
    }//GEN-LAST:event_viewBtnActionPerformed

    private void tempTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tempTxtFieldActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
                // TODO add your handling code here:
        int selectedRowIndex = vitalSignTable.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) vitalSignTable.getModel();

        // Get the Array List and remove the data object from selected index 
        ArrayList<VitalSigns> vs = vitalSignsHistory.getHistory();
        vs.remove(selectedRowIndex);
        
        // Repopulate the table
        populateTable();
        
        JOptionPane.showMessageDialog(this, "Vital signs deleted.");


    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bldPressureLbl;
    private javax.swing.JTextField bldPressureTxtField;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JTextField dateTxtField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pulseLbl;
    private javax.swing.JTextField pulseTxtField;
    private javax.swing.JLabel tempLbl;
    private javax.swing.JTextField tempTxtField;
    private javax.swing.JButton viewBtn;
    private javax.swing.JLabel viewVitalsLbl;
    private javax.swing.JTable vitalSignTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) vitalSignTable.getModel();
        model.setRowCount(0);
        
        for(VitalSigns vs: vitalSignsHistory.getHistory()){
            Object[] row = new Object[4];
            row[0] = vs.getDate();
            row[1] = vs.getTemperature();
            row[2] = vs.getPulse();
            row[3] = vs.getBloodPressure();
            
            model.addRow(row);
        }
    }
}
